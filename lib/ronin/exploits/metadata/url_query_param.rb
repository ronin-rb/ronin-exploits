# frozen_string_literal: true
#
# ronin-exploits - A Ruby library for ronin-rb that provides exploitation and
# payload crafting functionality.
#
# Copyright (c) 2007-2024 Hal Brodigan (postmodern.mod3 at gmail.com)
#
# ronin-exploits is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# ronin-exploits is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with ronin-exploits.  If not, see <https://www.gnu.org/licenses/>.
#

module Ronin
  module Exploits
    module Metadata
      #
      # Adds a {URLQueryParam::ClassMethods#url_query_param url_query_param}
      # metadata attribute to an exploit class.
      #
      module URLQueryParam
        #
        # Adds {ClassMethods} to the exploit class.
        #
        # @param [Class<Exploit>] exploit
        #   The exploit class including {URLQueryParam}.
        #
        # @api private
        #
        def self.included(exploit)
          exploit.extend ClassMethods
        end

        #
        # Class-methods.
        #
        module ClassMethods
          #
          # Get or sets the target URL query param of the exploit.
          #
          # @param [String, nil] new_url_query_param
          #   The optional new URL query param value to set.
          #
          # @return [String, nil]
          #   The set URL query param value.
          #
          # @api public
          #
          def url_query_param(new_url_query_param=nil)
            if new_url_query_param
              @url_query_param = new_url_query_param
            else
              @url_query_param ||= if superclass.kind_of?(ClassMethods)
                                     superclass.url_query_param
                                   end
            end
          end
        end

        #
        # The target URL query param of the exploit.
        #
        # @return [String, nil]
        #   The URL query param name to exploit.
        #
        # @api public
        #
        # @see ClassMethods#url_query_param
        #
        def url_query_param
          self.class.url_query_param
        end
      end
    end
  end
end
